name: NIST Special Database 19
run-name: ${{ github.actor }} build
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  Windows:
    name: build-windows
    runs-on: windows-latest

    steps:

    - name: install ninja
      run: |
        choco install ninja

    - name: Checkout
      uses: actions/checkout@v1
      with:
          submodules: recursive

    # - name: set compiler ENV vars
    #   run: |       
    #     echo "cc=cl" | Out-File -FilePath $env:GITHUB_ENV -Append
    #     echo "cxx=cl" | Out-File -FilePath $env:GITHUB_ENV -Append

    # - name: Show environment variable
    #   run: echo ${{ env.cc }}      

    # - name: Show environment variable
    #   run: echo ${{ env.cxx }}

    - name: cmake --build out/build/x64-release --target sd19test
      run: |
        cd ${{ github.workspace }}

        set && cls && "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" && cls && set
        
        cmake --preset=x64-release
        cmake --preset=x64-release
        cmake --build out/build/x64-release --target sd19test

    # - name: Build Solution (windows)
    #   run: |
    #     cd build
    #     MSBuild.exe CMakeHelloWorld.sln


  #https://github.com/cristianadam/HelloWorld/blob/master/.github/workflows/build_cmake.yml
